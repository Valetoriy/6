2. Исследование и применение зашифрованной передачи данных на основе IPSec.
Abstract
Чтобы решить проблему безопасности передачи данных между сетями, интернет-практики пробовали
различные решения, пытаясь обеспечить возможность передачи данных в нескольких сложных сетевых
средах, при этом безопасность также была соблюдена. Самое классическое решение - использовать
алгоритм шифрования для шифрования и передачи данных. Алгоритм шифрования включает международные
алгоритмы, такие как RSA[1] и AES[2]. В Китае также существуют SM1[3], SM2[4] и SM4[4] для
заполнения вакансии алгоритма шифрования, но все вышеперечисленные решения направлены на
шифрование самих данных. В этой статье делается попытка решить проблему безопасности передачи
данных с другой стороны. Даже если сами данные не зашифрованы, это все равно может гарантировать,
что как отправитель, так и получатель данных могут безопасно передавать данные. Идея этой статьи
состоит в том, чтобы попытаться установить собственный зашифрованный канал на стороне отправки и
получения данных. Благодаря этому зашифрованному каналу может быть гарантирована безопасность
передачи данных, даже если данные проходят через несколько устройств в среде Интернета.
Отправитель и получатель данных могут использовать канал Site-to-Site[5] VPN[6], установленный
IPSec[7], взаимодействовать с внутренним алгоритмом шифрования, который не только обеспечивает
безопасность данных, но и позволяет избежать риск использования сторонних алгоритмов и реализует
шифрование пакета данных в процессе передачи. Этот метод обладает характеристиками безопасности
и широкой применимости и может быть использован как новая идея для безопасной передачи данных.

I. Введение
В современную эпоху популяризации Интернета концепция информационной безопасности привлекает все
больше внимания. Как обеспечить безопасную передачу данных на целевое устройство среди огромных
интернет-устройств — это новая задача. Люди предлагают и разрабатывают новые технологии, структуры
и даже протоколы для постоянного удовлетворения соответствующих потребностей в безопасности данных.
В действительности данные связи между устройствами должны передаваться через сетевые кабели и
множество промежуточных устройств (включая, помимо прочего, коммутаторы, маршрутизаторы,
межсетевые экраны и другие устройства), прежде чем они наконец достигнут целевой сети. В этом
процессе на пути будет несколько устройств. Эти устройства необходимы для точной передачи данных
по адресу назначения, но в то же время они также представляют собой серьезную угрозу утечки данных.
Если во время передачи данных возникнут такие проблемы, как потеря пакетов данных, подделка данных
и утечка данных, это создаст угрозу безопасности данных. Обычный способ обеспечить безопасность
данных — зашифровать данные и затем передать их. Однако если все данные зашифрованы, объем данных
будет очень большим. Кроме того, шифрование и дешифрование займут много времени, что серьезно
повлияет на пользовательский опыт. Если зашифрованных данных слишком мало или алгоритм слишком
прост, это серьезно повлияет на безопасность данных. Как найти баланс между пользовательским
опытом и безопасностью, такого рода дебаты существовали всегда. В этой статье мы пытаемся решить
эту проблему с помощью другого подхода. Вместо использования зашифрованных данных в качестве входа
для решения проблемы он пытается зашифровать непосредственно на сетевом уровне, то есть установить
зашифрованный канал на сетевом уровне. В этом случае это займет немного времени только на
начальном этапе создания безопасного туннеля, поэтому это практически не повлияет на работу
пользователя, а зашифрованный туннель использует алгоритм китайской национальной коммерческой
криптографии в качестве ключа канала для обеспечения безопасности. туннеля. Туннельный режим
обеспечивает шифрованную передачу данных без снижения скорости передачи данных, что значительно
снижает риск незаконной кражи данных.

II. Описание проблемы
Давайте сначала смоделируем сценарий передачи данных в обычном режиме, то есть передачу данных в
виде открытого текста или зашифрованного текста. Используйте два хоста с разными сегментами сети
для моделирования связи. Сетевой сегмент слева — 192.168.3.0/24, а сетевой сегмент справа —
192.168.2.0/24. Топологию сети в этом случае можно увидеть на рис.1.

[[PIC1, Схема топологии передачи данных в обычном режиме]]

Устройство A в сегменте сети слева должно связаться с устройством C в сегменте сети справа.
Поскольку задействованы разные сегменты сети, требуется переход к маршрутизации. Здесь, чтобы
позже расширить сцену, используйте устройство B для имитации функций, связанных с маршрутизатором,
то есть соедините A и C через сервер B с двумя сетевыми картами, а A и C взаимодействуют через
сервер B для перехода. Настройки IP устройства A и устройства C можно увидеть на рис. 1, а
IP-адреса двух сетевых карт устройства B можно увидеть на рис. 2. Устройству B необходимо включить
функцию маршрутизации и пересылки (этот шаг предназначен для имитации маршрутизатора),
echo «1» > /proc/sys/net/ipv4/ip_forward. После завершения настройки устройство A и устройство C
могут выполнить двустороннюю передачу данных.

[[PIC2, Передача данных в виде открытого текста между устройством A и устройством C]]

В этом случае любая сетевая карта устройства B может видеть содержимое передаваемых данных и
напрямую просматривать их через профессиональный инструмент Wireshark. Например, данные 111
открытого текста, отправленные с 192.168.3.121 на 192.168.2.24 на рис. 2, чрезвычайно опасны для
передачи данных в открытом виде в Интернете, поскольку эти данные могут быть просмотрены любым
аппаратным обеспечением посередине. Данные также означают полную открытость.
Даже если A и C передают зашифрованные данные, зашифрованную информацию также можно увидеть с
помощью профессионального оборудования, например, аналогичный контент на рис. 3, A и C передают
зашифрованные данные AES.

[[PIC3, Данные, зашифрованные по AES]]

Если вы попытаетесь использовать инструмент для взлома паролей, если времени и словаря достаточно,
данные все равно можно успешно украсть, то есть будут получены данные открытого текста 123456.

III. Передача зашифрованных данных с использованием IPSec
Обычный метод шифрования заключается в шифровании важных данных для передачи, таких как пароли,
личная идентификационная информация и т. д. Необходимо найти способ шифрования передачи данных, и
IPSec VPN[8] является еще одним способом решения такого рода проблем. Сначала попытайтесь
установить туннель IPSec[9]. После установки туннеля все данные будут отправляться и получаться
через этот безопасный туннель. За исключением устройств на передающей и принимающей сторонах,
зашифрованная информация, видимая другими устройствами, не может быть расшифрована, например,
содержимое на рисунке 4.

[[PIC4, Установка зашифрованного канала с использованием IPSec]]

В техническом режиме IPSec использование туннельного режима позволяет установить безопасный
туннель связи между двумя разными IP-сетями для обеспечения зашифрованной передачи данных. Суть
использования туннеля IPSec заключается в том, что сетевые адреса обеих сторон могут посещать друг
друга.

[[PIC5, Топология сети устройства A и устройства C с использованием IPSec]]

IP-адреса устройства A и устройства C — 192.168.3.81 и 192.168.2.80 соответственно, и служба IPSec
распространяется и запускается на устройстве A и устройстве C, и устанавливается соединение связи
IPSec. Способ подключения показан на рис.5.
В соответствии с полученным пакетом pcap попробуйте использовать Wireshark, чтобы открыть
соответствующий эффект шифрования, конкретный эффект показан на рис.6.

[[PIC6, Эффект шифрования, видимый устройством B]]

Потому что туннельный режим IPSec пакетирует все IP-данные. Таким образом, данные, которые можно
увидеть на устройстве B, представляют собой содержимое ESP[10] (Инкапсулирующая полезная нагрузка
безопасности, инкапсулирующая полезная нагрузка). Однако фактически передаваемые данные не знают
конкретного содержания, и изначально был реализован эффект шифрования.

A. Настройка параметров туннеля IPSec.
Используйте режим туннеля IPSec (режим туннеля). Содержимое конфигурации показано на рис.7.

[[PIC7, Процесс настройки PSec]]

а) Политика Config.IPSec
И клиенту, и серверу необходимо создать политики IPSec. Эти политики определяют параметры связи
туннельного режима IPSec, включая алгоритм шифрования, метод аутентификации и срок действия.
Поскольку здесь можно определить алгоритм шифрования и метод аутентификации, для сценариев с
низкими требованиями безопасности алгоритм шифрования может определить алгоритм симметричного
шифрования, который может гарантировать, что скорость передачи данных не будет затронута. Метод
проверки может обрабатываться в зависимости от фактической сцены, а доступ одного или нескольких
пользователей может быть гибко определен.
б) Config.IPSec Туннельный режим
И клиенту, и серверу необходимо настроить IP-адрес и параметры, определенные политикой IPSec, в
режим туннеля IPSec. Здесь можно определить один или несколько IP-адресов (сегментов), что
позволяет эффективно фильтровать диапазон устройств обеих взаимодействующих сторон. А поскольку
здесь настроен IP-адрес (сегмент), устройства за пределами этого диапазона не могут подключиться
к связи, что эффективно предотвращает риск подделки данных.
c) Config.Переговоры по ключам
Согласование ключей выполняется между клиентом и сервером для обеспечения безопасности связи, а
для согласования ключей используется протокол обмена ключами в Интернете (IKE). Поскольку можно
провести согласование ключей, ключ можно регулярно автоматически заменять, что позволяет
эффективно избежать утечки ключей, обеспечить безопасность туннеля и значительно снизить риск
утечки данных.
d) Настройте соответствующие сети обеих сторон, чтобы обеспечить сетевое соединение.
Клиенту и серверу необходимо убедиться, что они могут взаимодействовать друг с другом, а затем
можно будет установить IPSec позже. Поскольку IPSec устанавливает туннель на основе эффективной
связи, не возникает дополнительного риска потери пакетов из-за самого туннеля. Для файла
конфигурации вы можете использовать соответствующий алгоритм Китайской национальной коммерческой
криптографии для настройки. Содержимое конфигурации показано на рис.8.

[[PIC8, Использует алгоритм SM1-SM3 для создания зашифрованного туннеля.]]

Здесь вы можете настроить алгоритм по умолчанию или использовать отечественный алгоритм. Если вы
используете внутренний алгоритм, вы можете гарантировать, что туннель IPSec установлен, а
внутренний алгоритм используется для эффективного обеспечения безопасности туннеля. После
завершения настройки вышеуказанного содержимого подготовка зашифрованного туннеля завершена, и вы
можете попробовать запустить туннель IPSec с помощью запуска настройки ipsec.

Б. Практическое применение туннеля IPSec.
Продолжайте расширять сценарий на примере IPSec. Устройство A теперь является крупномасштабным
маршрутизатором компании A, а устройство C также стало крупномасштабным маршрутизатором компании
C. Связь между компанией A и компанией C не может просто проходить через устройство B, но должна
проходить через несколько прыжков устройства. Очевидно, что существует большой риск при передаче
данных в виде открытого текста. В это время вы можете попробовать установить туннель IPSec.
Предположим, что выходной IP-адрес компании A в Интернете — 150.0.0.150, а выходной IP-адрес
компании C в Интернете — 150.0.0.148. Используя шифрование IPSec, можно выполнить зашифрованную
передачу данных. Вся топология сети представлена на рис.9.

[[PIC9, Реальная топология сети приложений IPSec]]

Поскольку возможность подключения к адресам 150.0.0.150 и 150.0.0.148 подтверждена, сетевое
подключение на последнем этапе устанавливать не требуется.
Затем вам необходимо настроить следующую информацию, в том числе:
Экспортное оборудование компании А
а) Политика Config.IPSec
Config.IPSec policy, укажите имя политики, метод шифрования, метод аутентификации личности, срок
действия и т. д.
б) Режим туннеля Config.IPSec
В конфигурации туннельного режима укажите политику IPSec, IP-адрес и маску LAN A, IP-адрес и маску
LAN B, а также IP-адрес удаленного выходного устройства.
в) Согласование Config.key
Согласование ключей Config.IKE для обеспечения безопасности связи, включая указание такой
информации, как ключевые алгоритмы и сертификаты.
Компания C также может настроить то же содержимое. Содержимое конфигурации показано на рис. 10.
После завершения настройки параметров можно попробовать запустить службу IPSec.

[[PIC10, Процесс настройки IPSec]]

Данные, видимые через промежуточный узел, представляют собой содержимое ESP[10] (Encapsulated
Security Payload, инкапсулированная полезная нагрузка). Содержимое отображаемых данных показано
на рис. 11. Это данные ESP[10], зашифрованные с помощью IPSec. Промежуточное устройство не может
видеть реально передаваемую информацию, и эффект шифрования достигнут.

[[PIC11, Зашифрованные данные IPSec]]

C. Более разнообразные сценарии использования IPSec
При использовании туннельного режима IPSec его можно использовать не только для прямого
подключения к Интернету, но и для специальных сетевых режимов, таких как сетевые сценарии NAT[11].
IPSec также может соответствовать таким требованиям к связи, что значительно расширяет сферу
использования IPSec технологии.
Например, IP-адрес, который фактически предоставляет услуги в целевой сцене, — 192.168.7.66, но
этот IP-адрес не открыт для внешней сети, и доступ разрешен только другим устройствам в той же
подсети, например 192.168.7.149. Если 192.168.3.118 требует взаимодействия устройств в целевой
сцене, необходимо применить режим преобразования NAT. В специальном устройстве беспроводной
маршрутизации данные от 150.0.0.150 пересылаются на 192.168.7.x, так что 192.168.7.66 может
получать данные от 192.168.7.x (фактический источник данных — 192.168.3.0/24), топологию сети
всей ситуации можно увидеть на рис.12.

[[PIC12, Схема топологии сети для более разнообразных сценариев использования NAT]]

После того, как межсетевой экран NAT выполняет SNAT и DNAT, 192.168.3.118 может завершить связь и
передать данные с 192.168.7.66 через SNAT, а IP-адрес источника данных, видимый целевой системой
(192.168.7.66), также равен 192.168.7.149 (SNAT соответствует IP-адресу). ), Подробности см.
на рис.13.

[[PIC13, IP-адрес источника данных в сценарии использования NAT]]

В сценарии использования NAT получатель уже получил данные, но его фактический источник данных -
192.168.3.118. Он отвечает потребностям разнообразных сценариев использования и захватывает данные
связи на промежуточном беспроводном маршрутизаторе, а видимые данные также являются зашифрованными
данными (рис. 14), что обеспечивает широкие сценарии использования и в то же время отвечает
требованиям безопасности данных.

[[PIC14, Эффект устройства посередине (беспроводной маршрутизатор), захватывающего зашифрованные
данные связи.]]

В реальном процессе промежуточное устройство не имеет возможности видеть содержимое на обоих
концах отправленных и полученных данных, а может видеть только зашифрованные данные. Был
подтвержден эффект шифрования IPSec, который может удовлетворить потребности более
распространенных сценариев.

IV. Заключение
Интернет-среда полна сложностей и опасностей. Иногда нам нужно найти компромисс между
безопасностью и стоимостью. В процессе передачи данных использование выделенных сетевых линий,
безусловно, может гарантировать безопасность данных, но общая стоимость слишком высока, а сценарии
использования очень ограничены. В обычных обстоятельствах информационная система шифрует некоторые
конкретные данные, но даже если алгоритм шифрования более безопасен, существует риск взлома данных.
В этом документе делается попытка изменить образ мышления, напрямую шифруя сетевой уровень и
используя IPSec для создания зашифрованного туннеля на сетевом уровне, что может снизить затраты и
повысить безопасность передачи данных. В реальном производстве и быту рекомендуется использовать
решение IPSec. В этой статье преимущества IPSec иллюстрируются практическими примерами. Введение
туннельного режима IPSec показывает, что технология IPSec может эффективно гарантировать
безопасность данных без максимального снижения скорости передачи данных. В реальной среде
Интернета устанавливается зашифрованный канал для завершения зашифрованной передачи данных. В
практических приложениях его можно использовать на таких терминалах, как микрокоммуникационные
модули и небольшие коммуникационные шлюзы, чтобы улучшить предыдущий единый режим только
шифрования данных. Преимуществом этого метода является простота конструкции, низкая стоимость и
высокая безопасность. Когда передаются важные данные, они не только шифруют данные, но и завершают
создание безопасного канала, который может эффективно защитить безопасность данных.
