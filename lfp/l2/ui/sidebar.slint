import { HorizontalBox, VerticalBox, Palette } from "std-widgets.slint";

component SideBarItem inherits Rectangle {
    in property <bool> selected;
    in-out property <string> text <=> label.text;

    callback clicked <=> touch.clicked;

    min-height: l.preferred-height;

    states [
        pressed when touch.pressed: {
            state.opacity: 0.8;
        }
        hover when touch.has-hover: {
            state.opacity: 0.6;
        }
        selected when root.selected: {
            state.opacity: 1;
        }
    ]

    state := Rectangle {
        opacity: 0;
        background: Palette.background;

        animate opacity { duration: 150ms; }
    }

    l := HorizontalBox {
        y: (parent.height - self.height) / 2;
        spacing: 0px;

        label := Text {
            vertical-alignment: center;
            wrap: word-wrap;
        }
    }

    touch := TouchArea {
        width: 100%;
        height: 100%;
    }
}

export component SideBar inherits Rectangle {
    in property <[string]> model: [];
    in property <string> title <=> label.text;
    out property <int> current-item: 0;
    // The currently focused tab

    width: 180px;
    background: Palette.background.darker(0.2);

    VerticalBox {
        padding-left: 0px;
        padding-right: 0px;
        alignment: start;

        label := Text {
            font-size: 16px;
            horizontal-alignment: center;
        }

        navigation := VerticalLayout {
            alignment: start;
            vertical-stretch: 0;
            for item[index] in root.model: SideBarItem {
                clicked => {
                    root.current-item = index;
                }

                text: item;
                selected: index == root.current-item;
            }
        }
    }
}
